name: Build Test and Publish

on:
  workflow_call:
    inputs:
      job-name:
        description: 'Job Name'
        type: string
        required: true
      node-version:
        description: 'Node Version'
        type: string
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  publish:
    name: ${{ inputs.job-name }} - Publish Artifacts
    runs-on: ubuntu-22.04

    permissions:
      id-token: write
      contents: read
      packages: write
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/1.0.x' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install node 18
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Installing
        run: pnpm install

      - name: Building
        run: pnpm build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          role-to-assume: 'arn:aws:iam::505630707203:role/interop-github-ecr-dev'
          role-session-name: interop-be-${{ inputs.job-name }}-${{ github.job }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Calculating image version
        id: version
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.ref_name }}-latest" >> $GITHUB_OUTPUT
          fi

      - name: Change directory
        run: cd ./jobs/${{ inputs.job-name }}

      - name: Build docker image
        run: docker build --network host -t $ECR_REGISTRY/interop-be-${{ inputs.job-name }}:$VERSION .
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.version.outputs.version }}

      - name: Push image to Amazon ECR
        run: docker push $ECR_REGISTRY/interop-be-${{ inputs.job-name }}:$VERSION
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.version.outputs.version }}
